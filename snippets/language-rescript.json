{
  ".source.rescript": {
    "ReScript: Type alias": {
      "prefix": "ta",
      "body": "type ${1:t} = ${2:typ}"
    },
    "ReScript: Let Binding": {
      "prefix": "lb",
      "body": "let ${1:name} = ${2:value}"
    },
    "ReScript: Let Function": {
      "prefix": "lf",
      "body": "let ${1:funcName} = (${2:args}) => {\n  $0\n}"
    },
    "ReScript: Module": {
      "prefix": "mo",
      "body": "module ${1:Module} = {\n  ${0}\n}"
    },
    "ReScript: Switch Pattern Match": {
      "prefix": "sw",
      "body": "switch ${1:expression} {\n| ${2:firstCase} => ${3:result}\n}"
    },
    "ReScript: Try-catch": {
      "prefix": "try",
      "body": "try ${1:expression} catch {\n| ${2:firstException} => ${3:firstHandler}\n}"
    }
  }
}
